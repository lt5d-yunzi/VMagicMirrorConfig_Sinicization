<UserControl x:Class="Baku.VMagicMirrorConfig.WindowSettingPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vmm="clr-namespace:Baku.VMagicMirrorConfig"
             mc:Ignorable="d"
             d:DesignWidth="400"
             d:DesignHeight="1050"
             d:DataContext="{x:Type vmm:WindowSettingViewModel}"
             >
    <UserControl.Resources>
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Margin" Value="5"/>
        </Style>
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Disabled"
                  >
        <StackPanel>
            <md:Card>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">

                        <md:PackIcon Kind="ColorLens"
                                     Style="{StaticResource SettingHeaderPackIcon}"
                                     />

                        <TextBlock Text="{DynamicResource Window_BackgroundColor}"
                                   Margin="5"
                                   Style="{StaticResource HeaderText}"
                                   />

                        <md:Card Style="{StaticResource ColorIndicatorCard}"
                                 Margin="10,5,5,0">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding Color}"/>
                                </Rectangle.Fill>
                            </Rectangle>
                        </md:Card>

                        <Button Style="{StaticResource CategorySettingResetButton}"
                                Command="{Binding ResetBackgroundColorSettingCommand}"
                                />
                    </StackPanel>

                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="TextAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0"
                                   Text="R"/>
                        <Slider Grid.Row="0" Grid.Column="1"
                                x:Name="sliderR"
                                Value="{Binding R, Mode=TwoWay}"
                                />
                        <TextBox Grid.Row="0" Grid.Column="2"
                                 Text="{Binding Value, ElementName=sliderR}"
                                 />

                        <TextBlock Grid.Row="1" Grid.Column="0"
                                   Text="G"/>
                        <Slider Grid.Row="1" Grid.Column="1"
                                x:Name="sliderG"
                                Value="{Binding G, Mode=TwoWay}"
                                />
                        <TextBox Grid.Row="1" Grid.Column="2"
                                 Text="{Binding Value, ElementName=sliderG}"
                                 />

                        <TextBlock Grid.Row="2" Grid.Column="0"
                                   Text="B"/>
                        <Slider Grid.Row="2" Grid.Column="1"
                                x:Name="sliderB"
                                Value="{Binding B, Mode=TwoWay}"
                                />
                        <TextBox Grid.Row="2" Grid.Column="2"
                                 Text="{Binding Value, ElementName=sliderB}"
                                 />
                    </Grid>
                </StackPanel>
            </md:Card>

            <md:Card>
                <StackPanel>
                    <CheckBox Content="{DynamicResource Window_Transparent}"
                              IsChecked="{Binding IsTransparent, Mode=TwoWay}"
                              />

                    <CheckBox Content="{DynamicResource Window_Draggable}"
                              IsChecked="{Binding WindowDraggable, Mode=TwoWay}"
                              />

                    <CheckBox Content="{DynamicResource Window_TopMost}"
                              IsChecked="{Binding TopMost, Mode=TwoWay}"
                              />

                    <Button Width="220"
                            Command="{Binding ResetWindowPositionCommand}"
                            >
                        <StackPanel Style="{StaticResource IconTextSetStackPanel}">
                            <md:PackIcon Style="{StaticResource IconTextSetIcon}"
                                         Kind="Reload"
                                         />
                            <TextBlock Style="{StaticResource IconSetSetText}"
                                       Text="{DynamicResource Window_ResetPosition}"
                                       />
                        </StackPanel>                        
                    </Button>
                </StackPanel>
            </md:Card>

            <md:Card>
                <StackPanel>
                    <Grid>
                        <StackPanel Orientation="Horizontal">

                            <md:PackIcon Kind="CameraUser"
                                             Style="{StaticResource SettingHeaderPackIcon}"
                                             />

                            <TextBlock Text="{DynamicResource Window_VirtualCamOutput}"
                                           Margin="5"
                                           Style="{StaticResource HeaderText}"
                                           />

                            <Button Style="{StaticResource CategorySettingResetButton}"
                                        Command="{Binding ResetVirtualCamSettingCommand}"
                                        />
                        </StackPanel>

                        <Button Style="{StaticResource MaterialDesignOutlinedButton}"
                                    Content="{DynamicResource Window_VirtualCamOutput_FirstTime_Header}"
                                    Command="{Binding OpenCameraInstallDialogCommand}"
                                    HorizontalAlignment="Right"
                                    Padding="4"
                                    Margin="0,0,10,0"
                                    />
                    </Grid>

                    <CheckBox IsChecked="{Binding VirtualCamEnabled}" 
                              Margin="5">
                        <TextBlock Text="{DynamicResource Window_VirtualCamOutput_Enable}"/>
                    </CheckBox>

                    <Grid Margin="5,0,5,5" IsEnabled="{Binding VirtualCamEnabled}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="10,0"
                                           Text="{DynamicResource Window_VirtualCamOutput_Resolution}"/>
                            <TextBox VerticalContentAlignment="Center"
                                         Width="45"
                                         Text="{Binding VirtualCamWidth}"
                                         md:HintAssist.Hint="{DynamicResource Window_VirtualCamOutput_Width}"
                                         />
                            <TextBlock Margin="4,3" 
                                           VerticalAlignment="Bottom"
                                           Text="x" 
                                           />
                            <TextBox VerticalContentAlignment="Center"
                                         Width="45"
                                         Text="{Binding VirtualCamHeight}"
                                         md:HintAssist.Hint="{DynamicResource Window_VirtualCamOutput_Height}"
                                         />
                        </StackPanel>
                        <Button HorizontalAlignment="Right"
                                Width="90"
                                Padding="3"
                                Margin="5,0"
                                Command="{Binding VirtualCamResizeCommand}">
                            <StackPanel Style="{StaticResource IconTextSetStackPanel}">
                                <md:PackIcon Style="{StaticResource IconTextSetIcon}"
                                             Kind="Resize"
                                             />
                                <TextBlock Style="{StaticResource IconSetSetText}"
                                           Text="{DynamicResource Window_VirtualCamOutput_MatchWindowSize}"
                                           />
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
            </md:Card>

            <md:Card>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">

                        <md:PackIcon Kind="LayersClear"
                                     Style="{StaticResource SettingHeaderPackIcon}"
                                     />

                        <TextBlock Text="{DynamicResource Window_TransparencySupport}"
                                   Margin="5"
                                   Style="{StaticResource HeaderText}"
                                   />

                        <Button Style="{StaticResource CategorySettingResetButton}"
                                Command="{Binding ResetOpacitySettingCommand}"
                                />
                    </StackPanel>
                    
                    <TextBlock Margin="10" Text="{DynamicResource Window_TransparencySupport_Level}"/>

                    <Slider Minimum="0" Maximum="4"
                            Margin="15,0"
                            Style="{StaticResource MaterialDesignDiscreteSlider}"
                            Value="{Binding WholeWindowTransparencyLevel, Mode=TwoWay}"
                            />

                    <Grid Margin="20,10,20,20">
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="MinHeight" Value="40"/>
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                            <vmm:IntegerEqualityToVisibilityConverter x:Key="IntToVisibilityConverter"/>
                        </Grid.Resources>
                        <TextBlock Text="{DynamicResource Window_TransparencySupport_Level_0}"
                                   Visibility="{Binding WholeWindowTransparencyLevel, 
                                                        Converter={StaticResource IntToVisibilityConverter},
                                                        ConverterParameter=0
                                                        }"
                                   />
                        <TextBlock Text="{DynamicResource Window_TransparencySupport_Level_1}" 
                                   Visibility="{Binding WholeWindowTransparencyLevel, 
                                                        Converter={StaticResource IntToVisibilityConverter},
                                                        ConverterParameter=1
                                                        }"
                                   />
                        <TextBlock Text="{DynamicResource Window_TransparencySupport_Level_2}" 
                                   Visibility="{Binding WholeWindowTransparencyLevel, 
                                                        Converter={StaticResource IntToVisibilityConverter},
                                                        ConverterParameter=2
                                                        }"
                                   />
                        <TextBlock Text="{DynamicResource Window_TransparencySupport_Level_3}" 
                                   Visibility="{Binding WholeWindowTransparencyLevel, 
                                                        Converter={StaticResource IntToVisibilityConverter},
                                                        ConverterParameter=3
                                                        }"
                                   />
                        <TextBlock Text="{DynamicResource Window_TransparencySupport_Level_4}" 
                                   Visibility="{Binding WholeWindowTransparencyLevel, 
                                                        Converter={StaticResource IntToVisibilityConverter},
                                                        ConverterParameter=4
                                                        }"
                                   />

                    </Grid>

                    <TextBlock Margin="10" 
                               Text="{DynamicResource Window_TransparencySupport_Alpha}"
                               />

                    <Grid Margin="20,0,20,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*" />
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Slider Grid.Column="0"                                
                                x:Name="sliderAlphaWhenTransparent"
                                Minimum="32" Maximum="255"
                                Value="{Binding AlphaValueOnTransparent, Mode=TwoWay}"
                                />
                        <TextBox Grid.Column="2"
                                 Text="{Binding Value, ElementName=sliderAlphaWhenTransparent}"
                                 />
                    </Grid>

                </StackPanel>
            </md:Card>


            <!--<md:Card>
                <StackPanel>
                    <CheckBox Content="{DynamicResource Window_EnableInitialPlacement}"
                              IsChecked="{Binding EnableWindowInitialPlacement, Mode=TwoWay}"
                              />
                    <Button Width="240"
                            Content="{DynamicResource Window_FetchUnityWindowPos}"
                            Command="{Binding FetchUnityWindowPositionCommand}"
                            />
                    <Button Width="240"
                            Content="{DynamicResource Window_MoveWindow}"
                            Command="{Binding MoveWindowCommand}"
                            />

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0"
                                   Text="{DynamicResource Window_InitialPositionX}"
                                   />
                        <TextBox Grid.Row="0" Grid.Column="1" 
                                 Text="{Binding WindowInitialPositionX, Mode=TwoWay}"
                                 />

                        <TextBlock Grid.Row="1" Grid.Column="0"
                                   Text="{DynamicResource Window_InitialPositionY}"
                                   />
                        <TextBox Grid.Row="1" Grid.Column="1"
                                 Text="{Binding WindowInitialPositionY, Mode=TwoWay}"
                                 />
                    </Grid>


                </StackPanel>
            </md:Card>-->

        </StackPanel>
    </ScrollViewer>
</UserControl>
